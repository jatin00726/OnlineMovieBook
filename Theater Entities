using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Threading.Tasks;

namespace Book_My_Show_Entities
{
    public class Theatre
    {
        [Key]
        public int Id { get; set; }

        [Required(ErrorMessage = "Name is mandatory")]
        public string Name { get; set; }

        [EnumDataType(typeof(City))]
        public string City { get; set; }

    }
}

Theater Controller

using Book_My_Show_BL.Interfaces;
using Book_My_Show_Entities;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Book_My_Show.Controllers
{

    [Route("api/[controller]")]
    [ApiController]
    
    public class TheatreController : ControllerBase
    {
    
        private ITheatreServiceBL _theatreServices;

        public TheatreController(ITheatreServiceBL theatreServices)
        {
            _theatreServices = theatreServices;
        }

        [HttpPost]
        public JsonResult Post(Theatre theatre)
        {
            _theatreServices.Add(theatre);
            return new JsonResult("Added Successfully");
        }

        [HttpGet("id/{id}")]
        public JsonResult Get(int id)
        {
            var movie = _theatreServices.GetById(id);
            return new JsonResult(movie);
        }

        [HttpGet("city/{city}")]
        public JsonResult Get(string city)
        {
            var movie = _theatreServices.GetByCity(city);
            return new JsonResult(movie);
        }

        [HttpGet]
        public JsonResult Get()
        {
            var moviesList = _theatreServices.GetAll();
            return new JsonResult(moviesList);
        }

        [HttpDelete("{id}")]
        public JsonResult Delete(int id)
        {
            _theatreServices.Delete(id);
            return new JsonResult("Deleted Successfully");
        }
    }
}

DAL

using Book_My_Show_DAL.Interfaces;
using Book_My_Show_Entities;
using Dapper;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Threading.Tasks;

namespace Book_My_Show_DAL.Implementations
{
    public class TheatreServices : ITheatreServices
    {
        private IDbConnection _db;

        public TheatreServices(IConfiguration configuration)
        {
            _db = new SqlConnection(configuration.GetConnectionString("DefaultConnection"));
        }

        public void Add(Theatre theatre)
        {
            var sqlQuery = "INSERT INTO Theatre (Name,City) VALUES (@Name,@City)";
            _db.Execute(sqlQuery, theatre);
        }

        public void Delete(int Id)
        {
            var sqlQuery = "DELETE FROM Theatre where Id = @Id";
            _db.Execute(sqlQuery, new { Id });
        }

        public List<Theatre> GetAll()
        {
            var sqlQuery = "SELECT * FROM Theatre";
            return _db.Query<Theatre>(sqlQuery).ToList();
        }

        public List<Theatre> GetByCity(string City)
        {
            var sqlQuery = "SELECT * FROM Theatre where City = @City";
            return _db.Query<Theatre>(sqlQuery, new { @City = City }).ToList();
        }

        public Theatre GetById(int Id)
        {
            var sqlQuery = "SELECT * FROM Theatre where Id = @Id";
            return _db.Query<Theatre>(sqlQuery, new { @Id = Id }).SingleOrDefault();
        }
    }
}
